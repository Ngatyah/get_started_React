{"ast":null,"code":"var _jsxFileName = \"/home/ngatyah/JAVASCRIPT/01-starting-setup/src/components/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport React, { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../components/UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [enteredYear, setEnteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setEnteredYear(selectedYear);\n  };\n\n  console.log();\n  const filteredExpense = props.items.filter(expense => {\n    return String(expense.date.getFullYear()) === enteredYear;\n  });\n\n  let expenseContents = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The Year has no Entries\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpense.length > 0) {\n    expenseContents = filteredExpense.map(expe => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expe.title,\n      amount: expe.amount,\n      date: expe.date\n    }, expe.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 51\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onEnteredYear: enteredYear,\n        onSelectedYear: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), expenseContents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"/Ir11HX6LpzatzNjUbmuIux07Vg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/ngatyah/JAVASCRIPT/01-starting-setup/src/components/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","enteredYear","setEnteredYear","filterChangeHandler","selectedYear","console","log","filteredExpense","items","filter","expense","String","date","getFullYear","expenseContents","length","map","expe","title","amount","id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAIvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,MAAD,CAA9C;;AAEA,QAAMQ,mBAAmB,GAAGC,YAAY,IAAI;AAC1CF,IAAAA,cAAc,CAACE,YAAD,CAAd;AAED,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR;AACA,QAAMC,eAAe,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACpD,WAAOC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,WAAb,EAAD,CAAN,KAAuCZ,WAA9C;AACD,GAFuB,CAAxB;;AAIA,MAAIa,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,eAAe,CAACQ,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BD,IAAAA,eAAe,GAAGP,eAAe,CAACS,GAAhB,CAAoBC,IAAI,iBAAI,QAAC,WAAD;AAE5C,MAAA,KAAK,EAAEA,IAAI,CAACC,KAFgC;AAG5C,MAAA,MAAM,EAAED,IAAI,CAACE,MAH+B;AAI5C,MAAA,IAAI,EAAEF,IAAI,CAACL;AAJiC,OACvCK,IAAI,CAACG,EADkC;AAAA;AAAA;AAAA;AAAA,YAA5B,CAAlB;AAKD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BAEE,QAAC,cAAD;AAAgB,QAAA,aAAa,EAAEnB,WAA/B;AACE,QAAA,cAAc,EAAEE;AADlB;AAAA;AAAA;AAAA;AAAA,cAFF,EAKGW,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvCQf,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import \"./Expenses.css\";\nimport React, { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../components/UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\n\nfunction Expenses(props) {\n\n\n\n  const [enteredYear, setEnteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setEnteredYear(selectedYear);\n\n  }\n  console.log();\n  const filteredExpense = props.items.filter(expense => {\n    return String(expense.date.getFullYear()) === enteredYear;\n  })\n\n  let expenseContents = <p>The Year has no Entries</p>;\n\n  if (filteredExpense.length > 0) {\n    expenseContents = filteredExpense.map(expe => <ExpenseItem\n      key={expe.id}\n      title={expe.title}\n      amount={expe.amount}\n      date={expe.date} />)\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n\n        <ExpensesFilter onEnteredYear={enteredYear}\n          onSelectedYear={filterChangeHandler} />\n\n        {expenseContents}\n\n\n\n      </Card>\n    </div>\n  );\n}\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}